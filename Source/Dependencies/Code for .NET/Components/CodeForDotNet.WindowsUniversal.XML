<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeForDotNet.WindowsUniversal</name>
    </assembly>
    <members>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Converters.BooleanNegationConverter">
            <summary>
            Value converter that translates true to false and vice versa.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.BooleanNegationConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts a <see cref="T:System.Boolean"/> by negating it.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.BooleanNegationConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts a <see cref="T:System.Boolean"/> back by negating it again.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Converters.BooleanToVisibilityConverter">
            <summary>
            Value converter that translates true to <see cref="F:Windows.UI.Xaml.Visibility.Visible"/> and false to
            <see cref="F:Windows.UI.Xaml.Visibility.Collapsed"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts from a <see cref="T:System.Boolean"/> to a <see cref="T:Windows.UI.Xaml.Visibility"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts back from a <see cref="T:Windows.UI.Xaml.Visibility"/> to a <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Converters.ByteToHexStringValueConverter">
            <summary>
            Byte to hexadecimal string two-way value converter.
            </summary>
            <remarks>
            Converts an unsigned byte to a fixed width format uppercase hexadecimal string without any
            prefix, i.e. exactly two characters "00" to "FF". Converts a string of any supported (
            <see cref="F:System.Globalization.NumberStyles.HexNumber"/>) format to an unsigned byte.
            </remarks>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.ByteToHexStringValueConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.ByteToHexStringValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called
            only in TwoWay bindings.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Converters.ConvertibleValueConverter">
            <summary>
            <see cref="T:System.IConvertible"/> two-way value converter.
            </summary>
            <remarks>
            Enables values to be used in data binding which are already convertible
            via <see cref="T:System.Convert"/>.
            </remarks>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.ConvertibleValueConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.ConvertibleValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Converters.EnumerationValueConverter">
            <summary>
            Enumeration two-way value converter.
            </summary>
            <remarks>
            Converts enumeration values to their underlying type's value, e.g. enumeration value to
            integer. Converts to enumeration values by doing nothing but pass the value through, allowing
            the runtime to implicitly cast back to the enumeration value.
            </remarks>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.EnumerationValueConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.EnumerationValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called
            only in TwoWay bindings.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Converters.IsNullToBooleanValueConverter">
            <summary>
            Null test to boolean one-way value converter.
            </summary>
            <remarks>Converts null to false and non-null to true, any object type.</remarks>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.IsNullToBooleanValueConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Converters.IsNullToBooleanValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Two-way bindings are not supported.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.ApplicationBase">
            <summary>
            Windows Store application with common features including a strongly typed application model, session state persistence and error reporting.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.#ctor(System.Uri)">
            <summary>
            Design-time constructor only.
            </summary>
            <param name="errorReportUri">URI where <see cref="T:CodeForDotNet.Data.ErrorReportData"/> will be posted.</param>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.#ctor(System.Type)">
            <summary>
            Creates an instance.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.ErrorReportUri">
            <summary>
            URI where <see cref="T:CodeForDotNet.Data.ErrorReportData"/> will be posted.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.Pages">
            <summary>
            Currently loaded pages, managed by this application, e.g. their state is saved and restored together with the application.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.StartPageType">
            <summary>
            Start page type, used for navigation.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.CheckErrors">
            <summary>
            Checks if any errors occurred then displays a prompt for the user to send an email.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.LoadState">
            <summary>
            Loads any saved state of the entire application including any previously loaded pages.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.SaveState">
            <summary>
            Saves state of the entire application including any loaded pages.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.DiscardErrors">
            <summary>
            Discards all errors.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.OnError(System.Object,Windows.UI.Xaml.UnhandledExceptionEventArgs)">
            <summary>
            Logs unhandled errors.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.OnLaunched(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)">
            <summary>
            Invoked when the application is launched normally by the end user. Other entry points will be used when the application is launched to open a
            specific file, to display search results, and so forth.
            </summary>
            <param name="event">Details about the launch request and process.</param>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.OnResuming(System.Object,System.Object)">
            <summary>
            Loads state when the application is resumed.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.OnSuspending(System.Object,Windows.ApplicationModel.SuspendingEventArgs)">
            <summary>
            Saves state when the application is suspended.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.SendErrors">
            <summary>
            Reports outstanding errors to the web service.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.ApplicationBase.ShowSendErrorsDialog">
            <summary>
            Displays a dialog which prompts the user to send error reports.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox">
            <summary>
            Enhanced <see cref="T:Windows.UI.Xaml.Controls.TextBox"/> control supporting multiple key-down tracking and group navigational functionality.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.CursorElementName">
            <summary>
            Name of the element added to draw the cursor highlight over the selected character(s).
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.CursorFillBrushResourceName">
            <summary>
            Name of the resource used as the fill brush for the cursor.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.DirectInputProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.DirectInput"/> dependency property.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupDownProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupDown"/> property.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupNextProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupNext"/> property.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupPreviousProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupPrevious"/> property.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupUpProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupUp"/> property.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.MinLengthProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.MinLength"/> dependency property.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.PadCharProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.PadChar"/> dependency property.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.UppercaseProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.Uppercase"/> dependency property.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox._cursor">
            <summary>
            Cursor rectangle.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox._originalSelectionStart">
            <summary>
            <see cref="P:Windows.UI.Xaml.Controls.TextBox.SelectionStart"/> value before it was changed.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox._originalText">
            <summary>
            <see cref="P:Windows.UI.Xaml.Controls.TextBox.Text"/> value before it was changed.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.#ctor">
            <summary>
            Creates an instance.
            </summary>
        </member>
        <member name="E:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.BeforeKeyDown">
            <summary>
            Fired before the key down event is processed.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.DirectInput">
            <summary>
            Enables direct handling of input from key press events, allowing input to be accepted even when the control has <see cref="P:Windows.UI.Xaml.Controls.TextBox.IsReadOnly"/> set,
            e.g. to blocking any soft keyboards from popping up.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupDown">
            <summary>
            Sets the next control downwards in an input group, to which the focus will be switched when moving down in this text box.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupNext">
            <summary>
            Sets the next control in an input group, to which the focus will be switched when moving right at the edge of this text box or typing a character
            beyond the maximum length.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupPrevious">
            <summary>
            Sets the previous control in an input group, to which the focus will be switched when moving left or typing at the edge of this text box.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupUp">
            <summary>
            Sets the previous control upwards an input group, to which the focus will be switched when moving up in this text box.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.MinLength">
            <summary>
            Minimum text length.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.PadChar">
            <summary>
            Padding character used when the current text is less than <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.MinLength"/>.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.Uppercase">
            <summary>
            Forces all alphabetical keys to upper case, not shift. Requires <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.DirectInput"/> to be enabled.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.KeysDown">
            <summary>
            Currently pressed keys. Set during the <see cref="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)"/> even handler, after <see cref="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnBeforeKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)"/> but before
            <see cref="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnAfterKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)"/> to supporting repeat detection.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.DoBackspace">
            <summary>
            Deletes the current selection or one character to the left (backspace rather than delete).
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.DoDelete">
            <summary>
            Deletes the current selection or one character to the right.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.HandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Handles the key down event.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.MoveDownInGroup">
            <summary>
            Moves to the <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupDown"/> control if specified. When the next control is a <see cref="T:Windows.UI.Xaml.Controls.TextBox"/> also selects the next logical character
            from which to continue input.
            </summary>
            <returns>True when a move occurred.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.MoveLeftInGroup">
            <summary>
            Moves to the <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupPrevious"/> control if specified. When the next control is a <see cref="T:Windows.UI.Xaml.Controls.TextBox"/> also selects the next logical
            character from which to continue input.
            </summary>
            <returns>True when a move occurred.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.MoveRightInGroup">
            <summary>
            Moves to the <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupNext"/> control if specified. When the next control is a <see cref="T:Windows.UI.Xaml.Controls.TextBox"/> also selects the next logical character
            from which to continue input.
            </summary>
            <returns>True when a move occurred.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.MoveUpInGroup">
            <summary>
            Moves to the <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.GroupUp"/> control if specified. When the next control is a <see cref="T:Windows.UI.Xaml.Controls.TextBox"/> also selects the next logical character
            from which to continue input.
            </summary>
            <returns>True when a move occurred.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnAfterKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called after the <see cref="E:Windows.UI.Xaml.UIElement.KeyDown"/> event is processed. The key press was blocked when <see cref="P:Windows.UI.Xaml.Input.KeyRoutedEventArgs.Handled"/> is true.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnAfterKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called after the <see cref="E:Windows.UI.Xaml.UIElement.KeyUp"/> event is processed. The key release processing was blocked when
            <see cref="P:Windows.UI.Xaml.Input.KeyRoutedEventArgs.Handled"/> is true.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnAfterTextChanged(System.Object,CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextChangedEventArgs)">
            <summary>
            Called after the base text box changed event has been processed.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnApplyTemplate">
            <summary>
            Prepares the control for display.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnBeforeKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called before the <see cref="E:Windows.UI.Xaml.UIElement.KeyDown"/> event is processed. Set <see cref="P:Windows.UI.Xaml.Input.KeyRoutedEventArgs.Handled"/> true to block the key press from
            being processed by the base control. Use the <see cref="P:Windows.UI.Xaml.Input.KeyRoutedEventArgs.Key"/> to examine the current key press, the <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.KeysDown"/>
            collection does not contain the current key unless it was previously pressed to support repeat detection. This class implements grouped control
            navigation in this method. If you override this method and do not call it this functionality will be disabled.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnBeforeKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called before the <see cref="E:Windows.UI.Xaml.UIElement.KeyUp"/> event is processed. Set <see cref="P:Windows.UI.Xaml.Input.KeyRoutedEventArgs.Handled"/> true to block the key release from
            being processed by the base control. Use the <see cref="P:Windows.UI.Xaml.Input.KeyRoutedEventArgs.Key"/> to examine the released key, the <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.KeysDown"/> collection
            is the state before processing this event so still contains the released key.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnBeforeSelectionChanged(System.Object,CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextSelectionChangedEventArgs)">
            <summary>
            Enforces selection rules based on current/maximum length and trying over to next control in a group.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnBeforeTextChanged(System.Object,CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextChangedEventArgs)">
            <summary>
            Called before the base text box changed event is processed but this class, but after the core text box has already processed a change (because it
            provides no text change handler itself to override). This class performs trimming or padding here, so must be called when overridden to retain this functionality.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Tracks key presses, filters keys and updates data bindings.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Tracks key presses.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.LayoutCursor">
            <summary>
            Positions the cursor based on current selection state.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnGotFocus(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Checks text selection when focus is received.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnSelectionChanged(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles the selection changed event.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextBox.OnTextChanged(System.Object,Windows.UI.Xaml.Controls.TextChangedEventArgs)">
            <summary>
            Applies format and range rules as the text changes.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextChangedEventArgs">
            <summary>
            Provides a better alternative to <see cref="T:Windows.UI.Xaml.Controls.TextChangedEventArgs"/> to track overrides to
            text content through multiple event consumers. Enables the sender to efficiently set the
            final changes once, avoiding loops or conflicting change events.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Creates an instance with the required properties.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextChangedEventArgs.OriginalText">
            <summary>
            Original text content at the time the change occurred (not before).
            </summary>
            <returns>
            May be different to the current control value if called during another change event.
            </returns>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextChangedEventArgs.Text">
            <summary>
            New or adjusted text value.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextSelectionChangedEventArgs">
            <summary>
            Provides a better alternative to <see cref="T:Windows.UI.Xaml.Controls.SelectionChangedEventArgs"/> to track overrides to
            selection position and length during change events, throughout multiple event consumers,
            with additional support for the concept of focus shifting to another control.
            Enables the sender to efficiently set the final changes once and avoid looping or conflicting change events.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextSelectionChangedEventArgs.#ctor(Windows.UI.Xaml.Controls.Control,System.Int32,System.Int32)">
            <summary>
            Creates an instance with the required properties.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextSelectionChangedEventArgs.OriginalFocus">
            <summary>
            Original control which has focus (where selection is changing).
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextSelectionChangedEventArgs.OriginalSelectionStart">
            <summary>
            Original selection start index at the time the change occurred (not before).
            </summary>
            <returns>
            May be different to the current control value if called during another change event.
            </returns>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextSelectionChangedEventArgs.OriginalSelectionLength">
            <summary>
            Original selection length at the time the change occurred (not before).
            </summary>
            <returns>
            May be different to the current control value if called during another change event.
            </returns>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextSelectionChangedEventArgs.Focus">
            <summary>
            Control which should have focus after the event is processed,
            which may have been changed by event handlers.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextSelectionChangedEventArgs.SelectionStart">
            <summary>
            Selection start after the event is processed,
            which may have been changed by event handlers.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextSelectionChangedEventArgs.SelectionLength">
            <summary>
            Selection end after the event is processed,
            which may have been changed by event handlers.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl">
            <summary>
            Control implementing <see cref="T:CodeForDotNet.ComponentModel.IEventCache"/> for efficient event handling, thread safety and increased performance.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl._suspendEventsCount">
            <summary>
            Reference counter for Suspend/Resume events.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl.#ctor">
            <summary>
            Creates a stand-alone instance.
            </summary>
        </member>
        <member name="E:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl.EventsResumed">
            <summary>
            Fired when events are suspended the first time, i.e. is not fired when nested.
            </summary>
        </member>
        <member name="E:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl.EventsSuspended">
            <summary>
            Fired when events are suspended the first time, i.e. is not fired when nested.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl.EventsAreEnabled">
            <summary>
            Flags that events are current enabled, and will be fired immediately. This can be used by inheriting classes to determine whether to cache or fire
            events immediately, in conjunction with the ResumeEvents() override.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl.SyncRoot">
            <summary>
            Thread synchronization object.
            </summary>
            <remarks>
            Lock this object when you read or write properties of this object which must be complete as a batch before any other threads enter the section, e.g.
            during data load or save operations.
            </remarks>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl.ResumeEvents">
            <summary>
            Resumes all events after SuspendEvents. Automatically fires any pending events.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl.SuspendEvents">
            <summary>
            Disables all events until ResumeEvents is called.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl.OnEventsResumed">
            <summary>
            Called when events are resumed the last time, i.e. is not fired when nested. Fires the <see cref="E:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl.EventsResumed"/> event.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl.OnEventsSuspended">
            <summary>
            Called when events are suspended the first time, i.e. is not fired when nested. Fires the <see cref="E:CodeForDotNet.WindowsUniversal.UI.Controls.EventControl.EventsSuspended"/> event.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox">
            <summary>
            Text box with masking and key filters to make it easier for the user to edit numbers. Supports multiple bases, e.g. decimal, hexadecimal, binary.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberBaseProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberBase"/> dependency property.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberMaxProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberMax"/> dependency property.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberMinProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberMin"/> dependency property.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberSignedProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberSigned"/> dependency property.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.#ctor">
            <summary>
            Creates an instance with default values.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberBase">
            <summary>
            Sets the number base edited with this text box.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberMax">
            <summary>
            Maximum value.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberMin">
            <summary>
            Minimum value.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberSigned">
            <summary>
            Enables editing signed values. Only applicable to decimal.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.OnBeforeKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Filters invalid keys.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.OnBeforeSelectionChanged(System.Object,CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextSelectionChangedEventArgs)">
            <summary>
            Enforces selection rules based on current/maximum length and trying over to next control in a group.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.OnBeforeTextChanged(System.Object,CodeForDotNet.WindowsUniversal.UI.Controls.DynamicTextChangedEventArgs)">
            <summary>
            Strips non-numeric characters according to <see cref="P:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.NumberBase"/> before processing text changes.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.GetValidNumberChars(System.Int32)">
            <summary>
            Gets the valid characters for a number base system.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.IsKeyValidNumber(CodeForDotNet.UI.Input.KeyboardKey,System.Int32)">
            <summary>
            Tests if a key is a valid number entry for the specified base.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.GetValue">
            <summary>
            Gets the current numeric value.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBox.Negate">
            <summary>
            Negates the current value.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBoxNumberBase">
            <summary>
            Number base.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBoxNumberBase.Binary">
            <summary>
            Binary base 2.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBoxNumberBase.Decimal">
            <summary>
            Decimal base 10.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Controls.NumericTextBoxNumberBase.Hexadecimal">
            <summary>
            Hexadecimal base 16.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Controls.TextBoxExtensions">
            <summary>
            Extensions for work with the XAML <see cref="T:Windows.UI.Xaml.Controls.TextBox"/> control.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.TextBoxExtensions.SelectText(Windows.UI.Xaml.Controls.TextBox,System.Int32,System.Int32)">
            <summary>
            Sets the <see cref="P:Windows.UI.Xaml.Controls.TextBox.SelectionStart"/> and <see cref="P:Windows.UI.Xaml.Controls.TextBox.SelectionLength"/> as
            close a possible to the desired index and length, automatically selecting at least one
            character when overwrite mode is necessary, i.e. when the text box is already filled to maximum.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Controls.TextBoxExtensions.SendKeys(Windows.UI.Xaml.Controls.TextBox,System.String)">
            <summary>
            Types into a text box, overwriting, inserting or adding text according to the current selection.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Models.UIModelApplication`1">
            <summary>
            Base class for all XAML applications which support the UI model framework.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelApplication`1.#ctor">
            <summary>
            Creates an instance with the specified model.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Models.UIModelApplication`1.Model">
            <summary>
            Application UI model.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Models.UIModelApplication`1.StartPageType">
            <summary>
            Start-up page type.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelApplication`1.CreateModel(System.Threading.Tasks.TaskFactory)">
            <summary>
            Creates the application model when it is started.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelApplication`1.Load(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)">
            <summary>
            Loads saved state when the application is launched.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelApplication`1.OnError(System.Object,Windows.UI.Xaml.UnhandledExceptionEventArgs)">
            <summary>
            Error handler.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelApplication`1.OnLaunched(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)">
            <summary>
            Starts the application.
            </summary>
            <param name="arguments">Details about the launch request and process.</param>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelApplication`1.OnNavigationFailed(System.Object,Windows.UI.Xaml.Navigation.NavigationFailedEventArgs)">
            <summary>
            Invoked when Navigation to a certain page fails
            </summary>
            <param name="sender">The Frame which failed navigation</param>
            <param name="arguments">Details about the navigation failure</param>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelApplication`1.Save(Windows.ApplicationModel.SuspendingEventArgs)">
            <summary>
            Saves state when the application is launched.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelApplication`1.OnSuspending(System.Object,Windows.ApplicationModel.SuspendingEventArgs)">
            <summary>
            Invoked when application execution is being suspended. Application state is saved without knowing whether the application will be terminated or
            resumed with the contents of memory still intact.
            </summary>
            <param name="sender">The source of the suspend request.</param>
            <param name="arguments">Details about the suspend request.</param>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.Models.UIModelPage`2">
            <summary>
            Base class for all XAML pages which support the UI model framework.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.Models.UIModelPage`2.ModelProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.Models.UIModelPage`2.Model"/><see cref="T:Windows.UI.Xaml.DependencyProperty"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelPage`2.#ctor">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.Models.UIModelPage`2.Model">
            <summary>
            Page UI model.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelPage`2.CreateModel(`0)">
            <summary>
            Creates the page model when it is displayed.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelPage`2.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
            <summary>
            Cleans-up when navigating away from the page.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.Models.UIModelPage`2.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
            <summary>
            Initializes the page when it is loaded.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.PageApplicationBase`1">
            <summary>
            Windows Store <see cref="T:Windows.UI.Xaml.Controls.Page"/> with common features including a
            strongly typed model and session state persistence when used in
            a <see cref="T:CodeForDotNet.WindowsUniversal.UI.ApplicationBase"/> based application.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.PageApplicationBase`1.Application">
            <summary>
            Application.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.PageBase">
            <summary>
            Windows Store <see cref="T:Windows.UI.Xaml.Controls.Page"/> with common features including a standard model property and session state persistence when used in a
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.PageBase.Application"/> based application.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.UI.PageBase.ModelProperty">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.UI.PageBase.Model"/> dependency property.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.PageBase.#ctor">
            <summary>
            Creates an instance.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.PageBase.Application">
            <summary>
            Application.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.PageBase.Model">
            <summary>
            View model.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.PageBase.LoadState(Windows.Storage.ApplicationDataContainer)">
            <summary>
            Loads state from the application data container, e.g. during launch/resume.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.PageBase.SaveState(Windows.Storage.ApplicationDataContainer)">
            <summary>
            Saves state to the application data container, e.g. during application suspension.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.UI.PageModelBase`2">
            <summary>
            Windows Store <see cref="T:Windows.UI.Xaml.Controls.Page"/> with common features including a strongly typed model and session state persistence when used in a
            <see cref="T:CodeForDotNet.WindowsUniversal.UI.ApplicationBase"/> based application.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.UI.PageModelBase`2.Model">
            <summary>
            View model.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.PageModelBase`2.CreateModel">
            <summary>
            Creates the <see cref="P:CodeForDotNet.WindowsUniversal.UI.PageModelBase`2.Model"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.UI.PageModelBase`2.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
            <summary>
            Performs page specific setup when navigated to.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager">
            <summary>
            SuspensionManager captures global session state to simplify process lifetime management for an application. Note that session state will be automatically
            cleared under a variety of conditions and should only be used to store information that would be convenient to carry across sessions, but that should be
            discarded when an application crashes or is upgraded.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.KnownTypes">
            <summary>
            List of custom types provided to the <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> when reading and writing session state. Initially empty, additional types
            may be added to customize the serialization process.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SessionState">
            <summary>
            Provides access to global session state for the current session. This state is serialized by <see cref="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SaveAsync"/> and restored by
            <see cref="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.RestoreAsync"/>, so values must be serializable by <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> and should be as compact as possible. Strings and
            other self-contained data types are strongly recommended.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String)">
            <summary>
            Registers a <see cref="T:Windows.UI.Xaml.Controls.Frame"/> instance to allow its navigation history to be saved to and restored from <see cref="P:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SessionState"/>. Frames should
            be registered once immediately after creation if they will participate in session state management. Upon registration if state has already been
            restored for the specified key the navigation history will immediately be restored. Subsequent invocations of <see cref="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.RestoreAsync"/> will also
            restore navigation history.
            </summary>
            <param name="frame">An instance whose navigation history should be managed by <see cref="T:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager"/></param>
            <param name="sessionStateKey">A unique key into <see cref="P:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SessionState"/> used to store navigation-related information.</param>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.RestoreAsync">
            <summary>
            Restores previously saved <see cref="P:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SessionState"/>. Any <see cref="T:Windows.UI.Xaml.Controls.Frame"/> instances registered with <see cref="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String)"/> will also restore
            their prior navigation state, which in turn gives their active <see cref="T:Windows.UI.Xaml.Controls.Page"/> an opportunity restore its state.
            </summary>
            <returns>
            An asynchronous task that reflects when session state has been read. The content of <see cref="P:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SessionState"/> should not be relied upon until this
            task completes.
            </returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SaveAsync">
            <summary>
            Save the current <see cref="P:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SessionState"/>. Any <see cref="T:Windows.UI.Xaml.Controls.Frame"/> instances registered with <see cref="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String)"/> will also preserve their
            current navigation stack, which in turn gives their active <see cref="T:Windows.UI.Xaml.Controls.Page"/> an opportunity to save its state.
            </summary>
            <returns>An asynchronous task that reflects when session state has been saved.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SessionStateForFrame(Windows.UI.Xaml.Controls.Frame)">
            <summary>
            Provides storage for session state associated with the specified <see cref="T:Windows.UI.Xaml.Controls.Frame"/>. Frames that have been previously registered with
            <see cref="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String)"/> have their session state saved and restored automatically as a part of the global <see cref="P:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SessionState"/>. Frames that
            are not registered have transient state that can still be useful when restoring pages that have been discarded from the navigation cache.
            </summary>
            <param name="frame">The instance for which session state is desired.</param>
            <returns>A collection of state subject to the same serialization mechanism as <see cref="P:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SessionState"/>.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.UnregisterFrame(Windows.UI.Xaml.Controls.Frame)">
            <summary>
            Disassociates a <see cref="T:Windows.UI.Xaml.Controls.Frame"/> previously registered by <see cref="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String)"/> from <see cref="P:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager.SessionState"/>. Any navigation state
            previously captured will be removed.
            </summary>
            <param name="frame">An instance whose navigation history should no longer be managed.</param>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManagerException">
            <summary>
            An error occurring during session state management in the <see cref="T:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManager"/> class.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManagerException.#ctor">
            <summary>
            Creates an empty instance.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManagerException.#ctor(System.String)">
            <summary>
            Creates an instance with the specified message.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Runtime.SuspensionManagerException.#ctor(System.String,System.Exception)">
            <summary>
            Creates an instance with the specified message and inner exception.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.Storage.LocalErrorStore">
            <summary>
            Stores errors in local storage as serialized exceptions.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.Storage.LocalErrorStore.FileNameFormat">
            <summary>
            Error file name format.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.Storage.LocalErrorStore.FolderName">
            <summary>
            Name of the folder in local storage where files are stored.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.Storage.LocalErrorStore.SourceIdFileName">
            <summary>
            Name of the file which stores a unique source identifier, used to correlate files sent from the same installation.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.LocalErrorStore.Add(System.Exception)">
            <summary>
            Adds an error to the store.
            </summary>
            <param name="error">Error to write the contents of.</param>
            <returns>File name.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.LocalErrorStore.Add(CodeForDotNet.Data.ErrorReportData)">
            <summary>
            Adds an error to the store.
            </summary>
            <param name="contents">Contents to write.</param>
            <returns>File name.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.LocalErrorStore.GenerateReport(System.Exception)">
            <summary>
            Extracts information from an error to use as the contents of an error file.
            </summary>
            <param name="error">Error to extract.</param>
            <returns>File contents.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.LocalErrorStore.Get(System.String)">
            <summary>
            Gets an error.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.LocalErrorStore.List">
            <summary>
            Lists all errors currently held in the store.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.LocalErrorStore.LoadSourceId">
            <summary>
            Retrieves or creates the error ID file.
            </summary>
            <returns>Unique ID stored as a file locally so it remains the same for the installation lifetime of the application.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.LocalErrorStore.Remove(System.String)">
            <summary>
            Removes an error from the store.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.Storage.StorageExtensions">
            <summary>
            Extends the <see cref="T:Windows.Storage.StorageFolder"/> class.
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.StorageExtensions.CreateFile(Windows.Storage.IStorageFolder,System.String)">
            <summary>
            Creates or opens an existing file in the folder.
            </summary>
            <param name="parentFolder">
            Folder in which the file is located, usually specified via extension.
            </param>
            <param name="fileName">File name.</param>
            <returns>A <see cref="T:Windows.Storage.IStorageFile"/> representing the created or existing file.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.StorageExtensions.CreateFolder(Windows.Storage.IStorageFolder,System.String)">
            <summary>
            Calls the <see cref="M:Windows.Storage.IStorageFolder.CreateFolderAsync(System.String)"/> method synchronously and
            without error if the folder already exists.
            </summary>
            <param name="parentFolder">Parent folder, usually specified via extension.</param>
            <param name="folderName">Name of the folder to create.</param>
            <returns>A <see cref="T:Windows.Storage.IStorageFolder"/> representing the created or existing folder.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.StorageExtensions.Delete(Windows.Storage.IStorageFile)">
            <summary>
            Deletes a file, moving it to the recycle bin when available.
            </summary>
            <param name="file">File to delete, usually specified via extension.</param>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.StorageExtensions.Delete(Windows.Storage.IStorageFile,System.Boolean)">
            <summary>
            Moves a file to the recycle bin or deletes it permanently when specified or the recycle
            bin is not available.
            </summary>
            <param name="file">File to delete, usually specified via extension.</param>
            <param name="permanent">
            True to delete permanently, otherwise it is moved to the recycle bin when available.
            Default is false (recycle).
            </param>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.StorageExtensions.OpenFile(Windows.Storage.IStorageFolder,System.String)">
            <summary>
            Gets a file if it exists or returns null when not found. A better alternative to
            <see cref="M:Windows.Storage.IStorageFolder.GetFileAsync(System.String)"/> which throws an exception when not found.
            </summary>
            <param name="parentFolder">Folder to query, usually specified via extension.</param>
            <param name="fileName">Name of the file to query, case insensitive.</param>
            <returns>A <see cref="T:Windows.Storage.StorageFile"/> representing the file or null when not found.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.StorageExtensions.OpenFolder(Windows.Storage.IStorageFolder,System.String)">
            <summary>
            Gets a subfolder if it exists or returns null when not found. A better alternative to
            <see cref="M:Windows.Storage.IStorageFolder.GetFolderAsync(System.String)"/> which throws an exception when not found.
            </summary>
            <param name="parentFolder">Folder to query, usually specified via extension.</param>
            <param name="subfolderName">Name of the subfolder to query, case insensitive.</param>
            <returns>A <see cref="T:Windows.Storage.StorageFolder"/> representing the folder or null when not found.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.StorageExtensions.ReadAllText(Windows.Storage.IStorageFile)">
            <summary>
            Reads the entire contents of a file as text.
            </summary>
            <param name="file">File to read, usually specified via extension.</param>
            <returns>Text from the file.</returns>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.Storage.StorageExtensions.WriteAllText(Windows.Storage.IStorageFile,System.String)">
            <summary>
            Writes the entire contents of a file as text.
            </summary>
            <param name="file">File to write, usually specified via extension.</param>
            <param name="contents">Text content to write.</param>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.AssemblyResources">
            <summary>
            Provides access to resources defined in this assembly.
            </summary>
        </member>
        <member name="F:CodeForDotNet.WindowsUniversal.AssemblyResources.Loader">
            <summary>
            Resource loader.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.AssemblyResources.ApplicationBaseOnLaunchedErrorCreatePage">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.AssemblyResources.ApplicationBaseOnLaunchedErrorCreatePage"/> string.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.AssemblyResources.DynamicTextBoxStyleMissingCursor">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.AssemblyResources.DynamicTextBoxStyleMissingCursor"/> string.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.AssemblyResources.SuspensionManagerRegisterFrameErrorSessionExists">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.AssemblyResources.SuspensionManagerRegisterFrameErrorSessionExists"/> string.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.AssemblyResources.SuspensionManagerRegisterFrameErrorState">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.AssemblyResources.SuspensionManagerRegisterFrameErrorState"/> string.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.AssemblyResources.SuspensionManagerRestoreAsyncErrorState">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.AssemblyResources.SuspensionManagerRestoreAsyncErrorState"/> string.
            </summary>
        </member>
        <member name="P:CodeForDotNet.WindowsUniversal.AssemblyResources.SuspensionManagerSaveAsyncErrorState">
            <summary>
            <see cref="P:CodeForDotNet.WindowsUniversal.AssemblyResources.SuspensionManagerSaveAsyncErrorState"/> string.
            </summary>
        </member>
        <member name="T:CodeForDotNet.WindowsUniversal.CodeForDotNet_WindowsUniversal_XamlTypeInfo.XamlMetaDataProvider">
            <summary>
            Main class for providing metadata for the app or library
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.CodeForDotNet_WindowsUniversal_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.CodeForDotNet_WindowsUniversal_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:CodeForDotNet.WindowsUniversal.CodeForDotNet_WindowsUniversal_XamlTypeInfo.XamlMetaDataProvider.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
    </members>
</doc>
